  spark-sql --master yarn --driver-memory 3g --executor-memory 5g --num-executors 30 --executor-cores 1 -e"
use ori;
add jar /home/ori/general/bin/transform-date.jar;
  CREATE TEMPORARY FUNCTION tran_date AS 'com.gm.transformDate.TransformDate';
  CREATE TEMPORARY FUNCTION mon_diff AS 'com.gm.transformDate.MonDiff';
  CREATE TEMPORARY FUNCTION ifnullipsos AS 'com.gm.transformDate.Ret';
  CREATE TEMPORARY FUNCTION isnullipsos AS 'com.gm.transformDate.IsNull';
  set spark.sql.crossJoin.enabled=true;
  use ori;
---分子----
 insert overwrite table KPI_WCFZ
select
mm.time,
s.vin
from ori.label_order s 
join ori.date_label t
join ori.mon_mapping mm
on substr(tran_date(s.order_balance_date),1,7)>=substr(add_months(t.mon_label,-11),1,7)
and substr(tran_date(s.order_balance_date),1,7)<=substr(t.mon_label,1,7)
and substr(t.mon_label,1,7)=mm.mon
where substr(t.mon_label,1,7)>='2016-10'
and substr(t.mon_label,1,7)<='2017-10' 
and s.MAINT_TYPE1<>'删除'
group by s.vin,mm.time; 
" > data_wc 2>logs &
 


  spark-sql --master yarn --driver-memory 3g --executor-memory 5g --num-executors 30 --executor-cores 1 -e"
use ori;
add jar /home/ori/general/bin/transform-date.jar;
  CREATE TEMPORARY FUNCTION tran_date AS 'com.gm.transformDate.TransformDate';
  CREATE TEMPORARY FUNCTION mon_diff AS 'com.gm.transformDate.MonDiff';
  CREATE TEMPORARY FUNCTION ifnullipsos AS 'com.gm.transformDate.Ret';
  CREATE TEMPORARY FUNCTION isnullipsos AS 'com.gm.transformDate.IsNull';
  set spark.sql.crossJoin.enabled=true;
  use ori;
-----分母-----
 insert overwrite table KPI_WCFM
select time,vin,age
from
(select time,vin,case
when age<=11 then '0-1年'
when age>=12
and age<=23 then '1-2年'
when age>=24
and age<=35 then '2-3年'
when age>=36
and age<=47 then '3-4年'
else '4+年' end as age
from
(select mm.time as time,s.vin as vin,
((substr(mm.time,1,4)-year(tran_date(s.order_balance_date)))*12+
(substr(mm.time,6,2)-month(tran_date(s.order_balance_date)))) as age
from ori.label_order s
 join ori.date_label t
on substr(tran_date(s.order_balance_date),1,7)>=substr(add_months(t.mon_label,-23),1,7)
and substr(tran_date(s.order_balance_date),1,7)<=substr(add_months(t.mon_label,-12),1,7)
join mon_mapping mm
on substr(t.mon_label,1,7)=mm.mon
join label_doss ld
on ld.vin=s.vin
where substr(t.mon_label,1,7)>='2016-10'
and substr(t.mon_label,1,7)<='2017-10' 
and s.MAINT_TYPE1<>'删除'
and mm.version='everymonth') t1)t2
group by time,vin,age;
" > data_wc 2>logs &


 
 spark-sql --master yarn --driver-memory 3g --executor-memory 5g --num-executors 30 --executor-cores 1 -e "
 use ori;
 select s.time,
 t.age_type2,
 count(distinct s.vin)/count(distinct t.vin) as num
 from KPI_WCFZ s
 join KPI_WCFM t
 on s.vin=t.vin
 group by t.age_type2,s.time;
 " > data_wc 2> logs &


   spark-sql --master yarn --driver-memory 3g --executor-memory 5g --num-executors 30 --executor-cores 1 -e"
use ori;
add jar /home/ori/general/bin/transform-date.jar;
  CREATE TEMPORARY FUNCTION tran_date AS 'com.gm.transformDate.TransformDate';
  CREATE TEMPORARY FUNCTION mon_diff AS 'com.gm.transformDate.MonDiff';
  CREATE TEMPORARY FUNCTION ifnullipsos AS 'com.gm.transformDate.Ret';
  CREATE TEMPORARY FUNCTION isnullipsos AS 'com.gm.transformDate.IsNull';
  set spark.sql.crossJoin.enabled=true;
  use ori;
   insert overwrite table KPI_WCFM
select 
mm.time,
s.vin,case
when mon_diff(ld.invoice_date,s.order_balance_date)<=11 then '0-1年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=12
and mon_diff(ld.invoice_date,s.order_balance_date)<=23 then '1-2年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=24
and mon_diff(ld.invoice_date,s.order_balance_date)<=35 then '2-3年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=36
and mon_diff(ld.invoice_date,s.order_balance_date)<=47 then '3-4年'
else '4+年' end as age_type2
from ori.label_order s 
join ori.date_label t
on substr(tran_date(s.order_balance_date),1,7)>=substr(add_months(t.mon_label,-23),1,7)
and substr(tran_date(s.order_balance_date),1,7)<=substr(add_months(t.mon_label,-12),1,7)
join ori.mon_mapping mm
on substr(t.mon_label,1,7)=mm.mon
join label_doss ld
on ld.vin=s.vin
where substr(t.mon_label,1,7)>='2016-10'
and substr(t.mon_label,1,7)<='2017-10' 
and s.MAINT_TYPE1<>'删除'
and mm.version='everymonth'
group by s.vin,mm.time,case
when mon_diff(ld.invoice_date,s.order_balance_date)<=11 then '0-1年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=12
and mon_diff(ld.invoice_date,s.order_balance_date)<=23 then '1-2年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=24
and mon_diff(ld.invoice_date,s.order_balance_date)<=35 then '2-3年'
when mon_diff(ld.invoice_date,s.order_balance_date)>=36
and mon_diff(ld.invoice_date,s.order_balance_date)<=47 then '3-4年'
else '4+年' end;
" > data_wc 2>logs &