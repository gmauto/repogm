----kpi_1(进站台次_total)
insert overwrite table  kpi_total_tmp
select ----'1' as kpi,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;

----kpi_1(进站台次_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1' as kpi,
primary_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;

----kpi_1(进站台次_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1' as kpi,
primary_classification,
second_level_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;

----kpi_1(进站台次_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1' as kpi,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;

----kpi_1(进站台次_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1' as kpi,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;

----kpi_1(进站台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1' as kpi,
primary_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;

----kpi_1(进站台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1' as kpi,
primary_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;

----kpi_1(进站台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;

----kpi_1(进站台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1' as kpi,
primary_classification,
second_level_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;


----kpi_1.1(保养台次_total)
insert overwrite table  kpi_total_tmp
select ----'1.1' as kpi,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;

----kpi_1.1(保养台次_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.1' as kpi,
primary_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;

----kpi_1.1(保养台次_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.1' as kpi,
primary_classification,
second_level_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.1(保养台次_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.1' as kpi,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;

----kpi_1.1(保养台次_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.1' as kpi,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;

----kpi_1.1(保养台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.1' as kpi,
primary_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;

----kpi_1.1(保养台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.1' as kpi,
primary_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;

----kpi_1.1(保养台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.1' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;

----kpi_1.1(保养台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.1' as kpi,
primary_classification,
second_level_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;

----kpi_1.15(不含首保保养台次_total)
insert overwrite table  kpi_total_tmp 
  select----'1.15' as kpi,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code;
  
----kpi_1.15(不含首保保养台次_一级)
  insert overwrite table kpi_a_level_tmp 
  select----'1.15' as kpi,
  primary_classification,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;
  
  
----kpi_1.15(不含首保保养台次_二级)
  insert overwrite table  kpi_b_level_tmp 
  select----'1.15' as kpi,
  primary_classification,
  second_level_classification,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;
  
  
----kpi_1.15(不含首保保养台次_车龄)  
  insert overwrite table  kpi_agetype_tmp 
  select----'1.15' as kpi,
  age_type,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;
  
  
----kpi_1.15(不含首保保养台次_保内外)
  insert overwrite table  kpi_bnbw_tmp 
  select----'1.15' as kpi,
  bn,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,bn;
  
  
----kpi_1.15(不含首保保养台次_一级_车龄)  
  insert overwrite table  kpi_a_agetype_tmp 
  select----'1.15' as kpi,
  primary_classification,
  age_type,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;
  
  
----kpi_1.15(不含首保保养台次_一级_保内外)
  insert overwrite table  kpi_a_bnbw_tmp 
  select----'1.15' as kpi,
  primary_classification,
  bn,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;
  
  
----kpi_1.15(不含首保保养台次_二级_车龄)
  insert overwrite table  kpi_b_agetype_tmp 
  select----'1.15' as kpi,
  primary_classification,
  second_level_classification,
  age_type,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;
  
  
----kpi_1.15(不含首保保养台次_二级_保内外)
  insert overwrite table  kpi_b_bnbw_tmp 
  select----'1.15' as kpi,
  primary_classification,
  second_level_classification,
  bn,
  substr(tran_date(order_balance_date),1,7) as mon,
  count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
  asc_code
   from ori.label_order  
  where MAINT_TYPE1='保养'
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  and first_maintnance=''
  group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;
  
  
  
----kpi_1.2(维修台次_total)
insert overwrite table  kpi_total_tmp
select ----'1.2' as kpi,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;

----kpi_1.2(维修台次_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.2' as kpi,
primary_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;

----kpi_1.2(维修台次_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.2' as kpi,
primary_classification,
second_level_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.2(维修台次_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.2' as kpi,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;

----kpi_1.2(维修台次_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.2' as kpi,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;

----kpi_1.2(维修台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.2' as kpi,
primary_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;

----kpi_1.2(维修台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.2' as kpi,
primary_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;

----kpi_1.2(维修台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.2' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;

----kpi_1.2(维修台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.2' as kpi,
primary_classification,
second_level_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;

----kpi_1.3(事故台次_total)
insert overwrite table  kpi_total_tmp
select ----'1.3' as kpi,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;

----kpi_1.3(事故台次_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.3' as kpi,
primary_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;

----kpi_1.3(事故台次_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.3' as kpi,
primary_classification,
second_level_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.3(事故台次_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.3' as kpi,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;

----kpi_1.3(事故台次_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.3' as kpi,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;

----kpi_1.3(事故台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.3' as kpi,
primary_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;

----kpi_1.3(事故台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.3' as kpi,
primary_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;

----kpi_1.3(事故台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.3' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;

----kpi_1.3(事故台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.3' as kpi,
primary_classification,
second_level_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;


----kpi_1.31(799元以下事故_total)
insert overwrite table  kpi_total_tmp
select ----'1.31' as kpi,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin
    ) s 
where sumamount<800
group by substr(order_date,1,7),asc_code;

----kpi_1.31(799元以下事故_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.31' as kpi,
primary_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,primary_classification;

----kpi_1.31(799元以下事故_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.31' as kpi,
primary_classification,
second_level_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification,second_level_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.31(799元以下事故_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.31' as kpi,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,age_type;

----kpi_1.31(799元以下事故_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.31' as kpi,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,bn;

----kpi_1.31(799元以下事故_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.31' as kpi,
primary_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,age_type,primary_classification;

----kpi_1.31(799元以下事故_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.31' as kpi,
primary_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,bn,primary_classification;

----kpi_1.31(799元以下事故_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.31' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification,second_level_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,age_type,primary_classification,second_level_classification;

----kpi_1.31(799元以下事故_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.31' as kpi,
primary_classification,
second_level_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification,second_level_classification) s 
where sumamount<800
group by substr(order_date,1,7),asc_code,bn,primary_classification,second_level_classification;


----kpi_1.32(800-1999元事故_total)
insert overwrite table  kpi_total_tmp
select ----'1.32' as kpi,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin
    ) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code;

----kpi_1.32(800-1999元事故_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.32' as kpi,
primary_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,primary_classification;

----kpi_1.32(800-1999元事故_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.32' as kpi,
primary_classification,
second_level_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification,second_level_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.32(800-1999元事故_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.32' as kpi,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,age_type;

----kpi_1.32(800-1999元事故_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.32' as kpi,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,bn;

----kpi_1.32(800-1999元事故_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.32' as kpi,
primary_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification;

----kpi_1.32(800-1999元事故_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.32' as kpi,
primary_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,bn,primary_classification;

----kpi_1.32(800-1999元事故_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.32' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification,second_level_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification,second_level_classification;

----kpi_1.32(800-1999元事故_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.32' as kpi,
primary_classification,
second_level_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification,second_level_classification) s 
where sumamount>=800 and sumamount<2000 
group by substr(order_date,1,7),asc_code,bn,primary_classification,second_level_classification;


----kpi_1.33(2000-4999元事故_total)
insert overwrite table  kpi_total_tmp
select ----'1.33' as kpi,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin
    ) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code;

----kpi_1.33(2000-4999元事故_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.33' as kpi,
primary_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,primary_classification;

----kpi_1.33(2000-4999元事故_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.33' as kpi,
primary_classification,
second_level_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification,second_level_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.33(2000-4999元事故_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.33' as kpi,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,age_type;

----kpi_1.33(2000-4999元事故_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.33' as kpi,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,bn;

----kpi_1.33(2000-4999元事故_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.33' as kpi,
primary_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification;

----kpi_1.33(2000-4999元事故_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.33' as kpi,
primary_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,bn,primary_classification;

----kpi_1.33(2000-4999元事故_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.33' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification,second_level_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification,second_level_classification;

----kpi_1.33(2000-4999元事故_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.33' as kpi,
primary_classification,
second_level_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification,second_level_classification) s 
where sumamount>=2000 and sumamount<5000 
group by substr(order_date,1,7),asc_code,bn,primary_classification,second_level_classification;

----kpi_1.34(5000-9999元事故_total)
insert overwrite table  kpi_total_tmp
select ----'1.34' as kpi,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin
    ) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code;

----kpi_1.34(5000-9999元事故_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.34' as kpi,
primary_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,primary_classification;

----kpi_1.34(5000-9999元事故_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.34' as kpi,
primary_classification,
second_level_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification,second_level_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.34(5000-9999元事故_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.34' as kpi,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,age_type;

----kpi_1.34(5000-9999元事故_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.34' as kpi,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,bn;

----kpi_1.34(5000-9999元事故_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.34' as kpi,
primary_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification;

----kpi_1.34(5000-9999元事故_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.34' as kpi,
primary_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,bn,primary_classification;

----kpi_1.34(5000-9999元事故_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.34' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification,second_level_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification,second_level_classification;

----kpi_1.34(5000-9999元事故_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.34' as kpi,
primary_classification,
second_level_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification,second_level_classification) s 
where sumamount>=5000 and sumamount<10000 
group by substr(order_date,1,7),asc_code,bn,primary_classification,second_level_classification;


----kpi_1.35(10000元以上事故_total)
insert overwrite table  kpi_total_tmp
select ----'1.35' as kpi,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin
    ) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code;

----kpi_1.35(10000元以上事故_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.35' as kpi,
primary_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,primary_classification;

----kpi_1.35(10000元以上事故_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.35' as kpi,
primary_classification,
second_level_classification,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,primary_classification,second_level_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.35(10000元以上事故_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.35' as kpi,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,age_type;

----kpi_1.35(10000元以上事故_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.35' as kpi,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,bn;

----kpi_1.35(10000元以上事故_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.35' as kpi,
primary_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification;

----kpi_1.35(10000元以上事故_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.35' as kpi,
primary_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,bn,primary_classification;

----kpi_1.35(10000元以上事故_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.35' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 age_type,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,age_type,primary_classification,second_level_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,age_type,primary_classification,second_level_classification;

----kpi_1.35(10000元以上事故_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.35' as kpi,
primary_classification,
second_level_classification,
bn,
substr(order_date,1,7) as mon,
count(*) as num,1.0 as den,
asc_code
 from (
 select asc_code,
 primary_classification,
 second_level_classification,
 bn,
 tran_date(order_balance_date) as order_date,
 vin,
 sum(order_balance_amount) as sumamount  
 from ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by asc_code,tran_date(order_balance_date),vin,bn,primary_classification,second_level_classification) s 
where sumamount>=10000 
group by substr(order_date,1,7),asc_code,bn,primary_classification,second_level_classification;

----kpi_1.4(索赔台次_total)
insert overwrite table  kpi_total_tmp
select ----'1.4' as kpi,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;

----kpi_1.4(索赔台次_一级)
insert overwrite table  kpi_a_level_tmp
select ----'1.4' as kpi,
primary_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;

----kpi_1.4(索赔台次_二级)
insert overwrite table  kpi_b_level_tmp
select ----'1.4' as kpi,
primary_classification,
second_level_classification,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;

----kpi_1.4(索赔台次_车龄)
insert overwrite table  kpi_agetype_tmp
select ----'1.4' as kpi,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;

----kpi_1.4(索赔台次_保内外)
insert overwrite table  kpi_bnbw_tmp
select ----'1.4' as kpi,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;

----kpi_1.4(索赔台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select ----'1.4' as kpi,
primary_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,age_type;

----kpi_1.4(索赔台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select ----'1.4' as kpi,
primary_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,bn;

----kpi_1.4(索赔台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select ----'1.4' as kpi,
primary_classification,
second_level_classification,
age_type,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,age_type;

----kpi_1.4(索赔台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select ----'1.4' as kpi,
primary_classification,
second_level_classification,
bn,
substr(tran_date(order_balance_date),1,7) as mon,
count(distinct vin,tran_date(order_balance_date)) as num,1.0 as den,
asc_code
 from ori.label_order  
where claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification,bn;

----kpi_0(售后总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;
  
  

----kpi_0(售后总产值_一级)
insert overwrite table  kpi_a_level_tmp
 select primary_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;
  
  
----kpi_0(售后总产值_二级)
insert overwrite table  kpi_b_level_tmp
 select primary_classification,
 second_level_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;
  
  

----kpi_0(售后总产值_车龄)
insert overwrite table  kpi_agetype_tmp
  select age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;


----kpi_0(售后总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;


----kpi_0(售后总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select primary_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,primary_classification;



----kpi_0(售后总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select primary_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,primary_classification;

----kpi_0(售后总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select primary_classification,
 second_level_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,
primary_classification,second_level_classification;


----kpi_0(售后总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select primary_classification,
 second_level_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1<>'删除'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,
primary_classification,second_level_classification;



----kpi_0.1(售后配件总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code;
  
  

----kpi_0.1(售后配件总产值_一级)
insert overwrite table  kpi_a_level_tmp
select s.primary_classification,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification;
  
  
----kpi_0.1(售后配件总产值_二级)
insert overwrite table  kpi_b_level_tmp
select s.primary_classification,
s.second_level_classification,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification;
  
  

----kpi_0.1(售后配件总产值_车龄)
insert overwrite table  kpi_agetype_tmp
select s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type;


----kpi_0.1(售后配件总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn;


----kpi_0.1(售后配件总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select s.primary_classification,
s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type,s.primary_classification;



----kpi_0.1(售后配件总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select s.primary_classification,
s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn,s.primary_classification;

----kpi_0.1(售后配件总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select s.primary_classification,
s.second_level_classification,
s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type,s.primary_classification,
s.second_level_classification;


----kpi_0.1(售后配件总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select s.primary_classification,
s.second_level_classification,
s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.sales_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.ori.part t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.order_number=t.order_number
and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn,s.primary_classification,
s.second_level_classification;



----kpi_0.2(保养总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;
  
  

----kpi_0.2(保养总产值_一级)
insert overwrite table  kpi_a_level_tmp
 select primary_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;
  
  
----kpi_0.2(保养总产值_二级)
insert overwrite table  kpi_b_level_tmp
 select primary_classification,
 second_level_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;
  
  

----kpi_0.2(保养总产值_车龄)
insert overwrite table  kpi_agetype_tmp
  select age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;


----kpi_0.2(保养总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;


----kpi_0.2(保养总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select primary_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,primary_classification;



----kpi_0.2(保养总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select primary_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,primary_classification;

----kpi_0.2(保养总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select primary_classification,
 second_level_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,
primary_classification,second_level_classification;


----kpi_0.2(保养总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select primary_classification,
 second_level_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='保养'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,
primary_classification,second_level_classification;



----kpi_0.3(维修总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;
  
  

----kpi_0.3(维修总产值_一级)
insert overwrite table  kpi_a_level_tmp
 select primary_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;
  
  
----kpi_0.3(维修总产值_二级)
insert overwrite table  kpi_b_level_tmp
 select primary_classification,
 second_level_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;
  
  

----kpi_0.3(维修总产值_车龄)
insert overwrite table  kpi_agetype_tmp
  select age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;


----kpi_0.3(维修总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;


----kpi_0.3(维修总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select primary_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,primary_classification;



----kpi_0.3(维修总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select primary_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,primary_classification;

----kpi_0.3(维修总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select primary_classification,
 second_level_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,
primary_classification,second_level_classification;


----kpi_0.3(维修总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select primary_classification,
 second_level_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='维修'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,
primary_classification,second_level_classification;



----kpi_0.4(事故总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code;
  
  

----kpi_0.4(事故总产值_一级)
insert overwrite table  kpi_a_level_tmp
 select primary_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification;
  
  
----kpi_0.4(事故总产值_二级)
insert overwrite table  kpi_b_level_tmp
 select primary_classification,
 second_level_classification,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,primary_classification,second_level_classification;
  
  

----kpi_0.4(事故总产值_车龄)
insert overwrite table  kpi_agetype_tmp
  select age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type;


----kpi_0.4(事故总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn;


----kpi_0.4(事故总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select primary_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,primary_classification;



----kpi_0.4(事故总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select primary_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,primary_classification;

----kpi_0.4(事故总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select primary_classification,
 second_level_classification,
 age_type,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,age_type,
primary_classification,second_level_classification;


----kpi_0.4(事故总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select primary_classification,
 second_level_classification,
 bn,
 substr(tran_date(order_balance_date),1,7) as mon,
sum(order_balance_amount) as num,1.0 as den,
asc_code
 from  ori.label_order  
where MAINT_TYPE1='事故'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(order_balance_date),1,7),asc_code,bn,
primary_classification,second_level_classification;


----kpi_0.5(索赔总产值_total)
insert overwrite table  kpi_total_tmp
select substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1' 
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code;
  
  

----kpi_0.5(索赔总产值_一级)
insert overwrite table  kpi_a_level_tmp
select s.primary_classification,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification;
  
  
----kpi_0.5(索赔总产值_二级)
insert overwrite table  kpi_b_level_tmp
select s.primary_classification,
s.second_level_classification,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification;
  
  

----kpi_0.5(索赔总产值_车龄)
insert overwrite table  kpi_agetype_tmp
select s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type;


----kpi_0.5(索赔总产值_保内外)
insert overwrite table  kpi_bnbw_tmp
select s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn;


----kpi_0.5(索赔总产值_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp
select s.primary_classification,
s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type,s.primary_classification;



----kpi_0.5(索赔总产值_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp
select s.primary_classification,
s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn,s.primary_classification;

----kpi_0.5(索赔总产值_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp
select s.primary_classification,
s.second_level_classification,
s.age_type,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type,s.primary_classification,
s.second_level_classification;


----kpi_0.5(索赔总产值_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp
select s.primary_classification,
s.second_level_classification,
s.bn,
substr(tran_date(s.order_balance_date),1,7) as mon,
sum(t.claim_accepted_amount) as num,1.0 as den,
s.asc_code
 from  ori.label_order s,ori.claim_uniq t 
where s.MAINT_TYPE1<>'删除'
and s.asc_code=t.asc_code
and s.claim_order_number=t.claim_order_number
and s.claim='1'
and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
and substr(tran_date(order_balance_date),1,7)<='${end_date}'
group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn,s.primary_classification,
s.second_level_classification;

----kpi_0.6(售后配件总产值_total)
  insert overwrite table  kpi_total_tmp 
  select----'0.6' as kpi,
  t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon;
  
----kpi_0.6(售后配件总产值_一级)
  insert overwrite table  kpi_a_level_tmp 
  select----'0.6' as kpi,
  t1.primary_classification,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,primary_classification,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification;
  
----kpi_0.6(售后配件总产值_二级)  
  insert overwrite table  kpi_b_level_tmp 
   select----'0.6' as kpi,
   t1.primary_classification,t1.second_level_classification,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,second_level_classification,primary_classification,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification,second_level_classification)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,second_level_classification,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification,second_level_classification) t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification and 
  t1.second_level_classification=t2.second_level_classification;
  
----kpi_0.6(售后配件总产值_车龄)
  insert overwrite table  kpi_agetype_tmp 
   select----'0.6' as kpi,
   t1.age_type,t1.mon,
   case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,age_type,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,age_type)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,age_type,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,age_type)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.age_type=t2.age_type;
  
  
----kpi_0.6(售后配件总产值_保内外)
  insert overwrite table  kpi_bnbw_tmp 
   select----'0.6' as kpi,
   t1.bn,t1.mon,
   case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,bn,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,bn)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,bn,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,bn)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.bn=t2.bn;
  
  
----kpi_0.6(售后配件总产值_一级_车龄)
  insert overwrite table  kpi_a_agetype_tmp 
   select----'0.6' as kpi,
   t1.primary_classification,t1.age_type,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,primary_classification,age_type,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification,age_type)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,age_type,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification,age_type)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification and t1.age_type=t2.age_type;
  
----kpi_0.6(售后配件总产值_一级_保内外)
  insert overwrite table  kpi_a_bnbw_tmp 
   select----'0.6' as kpi,
   t1.primary_classification,t1.bn,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,primary_classification,bn,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification,bn)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,bn,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification,bn)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification and t1.bn=t2.bn;
  
  
----kpi_0.6(售后配件总产值_二级_车龄)  
  insert overwrite table  kpi_b_agetype_tmp 
   select----'0.6' as kpi,
   t1.primary_classification,t1.second_level_classification,t1.age_type,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,primary_classification,second_level_classification,age_type,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification,second_level_classification,age_type)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,second_level_classification,age_type,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification,second_level_classification,age_type)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification and t1.second_level_classification=t2.second_level_classification and t1.age_type=t2.age_type;
  
----kpi_0.6(售后配件总产值_二级_保内外)
  insert overwrite table  kpi_b_bnbw_tmp 
   select----'0.6' as kpi,
   t1.primary_classification,t1.second_level_classification,t1.bn,t1.mon,
  case when t2.sumclaim is null then t1.sumpart
  else (t1.sumpart-t2.sumclaim) end as num,1.0 as den,t1.asc_code
  from (select substr(tran_date(t.order_balance_date),1,7) as mon,primary_classification,second_level_classification,bn,
  sum(t.sales_amount) as num,1.0 as den,t.asc_code from ori.part t
   join ori.label_order s on s.asc_code=t.asc_code and s.order_number=t.order_number
  where s.MAINT_TYPE1<>'删除' 
  and substr(tran_date(t.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(t.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(t.order_balance_date),1,7),t.asc_code,primary_classification,second_level_classification,bn)t1
  left join 
  (select substr(tran_date(s.order_balance_date),1,7) as mon,primary_classification,second_level_classification,bn,
  sum(t.claim_accepted_amount)+sum(t.claim_accepted_amount_tax) as sumclaim,
  s.asc_code
   from  ori.label_order s join ori.claim_uniq t 
   on s.asc_code=t.asc_code and s.claim_order_number=t.claim_order_number
  where s.MAINT_TYPE1<>'删除'
  and s.claim='1' 
  and substr(tran_date(order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,primary_classification,second_level_classification,bn)t2
  on t1.asc_code=t2.asc_code and t1.mon=t2.mon and t1.primary_classification=t2.primary_classification and t1.second_level_classification=t2.second_level_classification and t1.bn=t2.bn;

----kpi_1.11(平价机油台次_total)
insert overwrite table  kpi_total_tmp 
  select 
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code; 
  


----kpi_1.11(平价机油台次_一级)
insert overwrite table  kpi_a_level_tmp 
  select 
  s.primary_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification; 
  


----kpi_1.11(平价机油台次_二级)
insert overwrite table  kpi_b_level_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification; 
  


----kpi_1.11(平价机油台次_车龄)
insert overwrite table kpi_agetype_tmp
select 
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type; 
  


----kpi_1.11(平价机油台次_保内外)
insert overwrite table  kpi_bnbw_tmp 
  select 
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn; 
  


----kpi_1.11(平价机油台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp 
  select 
  s.primary_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.age_type; 
  


----kpi_1.11(平价机油台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp 
  select 
  s.primary_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.bn; 
  


----kpi_1.11(平价机油台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.age_type; 
  


----kpi_1.11(平价机油台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
   from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='低端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.bn; 
  


----kpi_1.12(中端机油台次_total)
insert overwrite table  kpi_total_tmp 
  select 
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code; 
  


----kpi_1.12(中端机油台次_一级)
insert overwrite table  kpi_a_level_tmp 
  select 
  s.primary_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification; 
  


----kpi_1.12(中端机油台次_二级)
insert overwrite table  kpi_b_level_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification; 
  


----kpi_1.12(中端机油台次_车龄)
insert overwrite table  kpi_agetype_tmp 
  select 
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type; 
  


----kpi_1.12(中端机油台次_保内外)
insert overwrite table  kpi_bnbw_tmp 
  select 
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn; 
  


----kpi_1.12(中端机油台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp 
  select 
  s.primary_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.age_type; 
  


----kpi_1.12(中端机油台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp 
  select 
  s.primary_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.bn; 
  


----kpi_1.12(中端机油台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.age_type; 
  


----kpi_1.12(中端机油台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='中端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.bn; 
  


----kpi_1.13(高端机油台次_total)
 insert overwrite table  kpi_total_tmp 
  select 
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code; 
  


----kpi_1.13(高端机油台次_一级)
insert overwrite table  kpi_a_level_tmp 
  select 
  s.primary_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification; 
  


----kpi_1.13(高端机油台次_二级)
insert overwrite table  kpi_b_level_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification; 
  


----kpi_1.13(高端机油台次_车龄)
insert overwrite table  kpi_agetype_tmp 
  select 
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.age_type; 
  


----kpi_1.13(高端机油台次_保内外)
insert overwrite table  kpi_bnbw_tmp 
  select 
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.bn; 
  


----kpi_1.13(高端机油台次_一级_车龄)
insert overwrite table  kpi_a_agetype_tmp 
  select 
  s.primary_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.age_type; 
  


----kpi_1.13(高端机油台次_一级_保内外)
insert overwrite table  kpi_a_bnbw_tmp 
  select 
  s.primary_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.bn; 
  


----kpi_1.13(高端机油台次_二级_车龄)
insert overwrite table  kpi_b_agetype_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.age_type,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.age_type; 
  


----kpi_1.13(高端机油台次_二级_保内外)
insert overwrite table  kpi_b_bnbw_tmp 
  select 
  s.primary_classification,
  s.second_level_classification,
  s.bn,
  substr(tran_date(s.order_balance_date),1,7) as mon,
  count(distinct s.vin,tran_date(s.order_balance_date)) as num,1.0 as den,
  s.asc_code
  from ori.label_order s 
  join (select distinct t1.asc_code,t1.order_number,m.month from ori.part t1
  join (select * from ori.engine_oil where type='高端') p
  join (select month,version from mapping where fact_table='ori.label_order' and dim_table='ori.engine_oil') m
  on t1.ori.part_number=p.ori.part_num
  and p.version=m.version )t
  on s.asc_code=t.asc_code 
  and s.order_number=t.order_number
  and substr(tran_date(s.order_balance_date),1,7)=t.month
  where s.MAINT_TYPE1='保养'
  and substr(tran_date(s.order_balance_date),1,7)>='${begin_date}'
  and substr(tran_date(s.order_balance_date),1,7)<='${end_date}'
  group by substr(tran_date(s.order_balance_date),1,7),s.asc_code,s.primary_classification,s.second_level_classification,s.bn; 







